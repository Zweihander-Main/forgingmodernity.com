---
import Global from '@layouts/Global.astro';
import Map from '@components/Map/index.svelte';
import { CollectionEntry, getCollection, getEntryBySlug } from 'astro:content';
import { camelCaseString } from '@util/funcs';
import type { AstroComponentFactory } from 'astro/dist/runtime/server';
import type { slimmedCanals } from '@util/types';
export type Props = Record<string, never>;

const metaEntry = await getEntryBySlug('meta', 'site');
const { shortTitle } = metaEntry.data;
const pageTitle = 'Map';

const canals = await getCollection('canals');

const slimmedCanals: slimmedCanals = canals.map((canal) => {
	return {
		x: canal.data.x,
		y: canal.data.y,
		width: canal.data.width,
		height: canal.data.height,
		scale: canal.data.scale,
		stroke: canal.data.stroke,
		path: canal.data.path,
		name: canal.data.name,
		pathYAdjust: canal.data.pathYAdjust,
	};
});
const canalEntries: Array<{ Content: AstroComponentFactory; name: string }> =
	[];

for (let i = 0; i < canals.length; i++) {
	const canal = canals[i] as CollectionEntry<'canals'>;
	const { Content } = await canal.render();
	canalEntries.push({
		Content,
		name: camelCaseString(canal.data.name),
	});
}
---

<Global title={`${shortTitle} | ${pageTitle}`}>
	<Map canals={slimmedCanals} client:load />
	{
		canalEntries.map(({ Content, name }) => (
			<div id={`canal_${name}`} class="canal-content">
				<Content />
			</div>
		))
	}
</Global>

<style lang="scss">
	// Get around Astro-Svelte-SCSS bug
	@import 'leaflet/dist/leaflet';

	body {
		background: v.$color-mapbg;
	}
	.canal-content {
		display: none;
	}
</style>
