---
import { getPicture } from '@astrojs/image';
export interface Props {
	src: ImageMetadata;
	alt: string;
	sizes?: string;
	widths: number[];
	class?: string;
	type: 'jpeg' | 'png';
}

const {
	src,
	alt,
	sizes = '100vw',
	widths,
	class: className = '',
	type,
} = Astro.props;

const renderedPicObject = await getPicture({
	src,
	widths,
	alt,
	formats: ['avif', 'webp', type],
});
---

<picture>
	{
		renderedPicObject.sources.map((source) => (
			<source srcset={source.srcset} sizes={sizes} type={source.type} />
		))
	}
	<img
		src={renderedPicObject.image.src}
		loading="eager"
		decoding="sync"
		fetchpriority="high"
		class={className}
		alt={alt}
		width={src.width}
		height={src.height}
	/>
</picture>
