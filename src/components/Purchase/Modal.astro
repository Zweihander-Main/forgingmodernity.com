---
import Retailer from './Retailer.astro';
import { MODAL_ID } from './common';
import type { CollectionEntry } from 'astro:content';

export interface Props {
	retailerItems: Array<CollectionEntry<'retailers'>>;
}

const { retailerItems } = Astro.props;
const sortedRetailers = retailerItems.sort(
	(a, b) => a.data.order - b.data.order
);
---

<input class="state" id={MODAL_ID} type="checkbox" />
<section class="modal" tabindex={-1} role="dialog" aria-hidden="true">
	<label class="outer" for={MODAL_ID}></label>
	<div class="inner">
		<label class="close" for={MODAL_ID}></label>
		<h1>Retailers</h1>
		<div class="retailers">
			{
				sortedRetailers.map(({ data: item }) => (
					<Retailer
						name={item.name}
						url={item.url}
						image={item.image}
					/>
				))
			}
		</div>
	</div>
</section>
<style lang="scss">
	.modal {
		opacity: 0;
		visibility: hidden;
		position: fixed;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		text-align: left;
		background: v.$color-shadow-dark;
		transition: opacity v.$transition-speed-slow v.$transition-timing;
	}

	.outer {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		cursor: pointer;
	}

	.state {
		display: none;

		&:checked + .modal {
			opacity: 1;
			visibility: visible;
		}

		&:checked + .modal .inner {
			top: 0;
		}
	}

	.inner {
		transition: top v.$transition-speed-slow v.$transition-timing;
		position: absolute;
		top: 20%;
		right: 0;
		bottom: 0;
		left: 0;
		width: 50%;
		margin: auto;
		overflow: auto;
		background: v.$color-default;
		padding: 1em 2em;
		height: 50%;
	}

	.close {
		position: absolute;
		right: 1em;
		top: 1em;
		width: 1.1em;
		height: 1.1em;
		cursor: pointer;

		&::after,
		&::before {
			content: '';
			position: absolute;
			width: 2px;
			height: 1.5em;
			background: v.$color-button;
			display: block;
			transform: rotate(45deg);
			left: 50%;
			margin: -3px 0 0 -1px;
			top: 0;
		}

		&:hover::before,
		&:hover::after {
			background: v.$color-text-stroke;
		}

		&::before {
			transform: rotate(-45deg);
		}
	}

	.retailers {
		gap: 2rem;
		align-items: center;
		display: grid;
		grid-auto-rows: 1fr;
		grid-template-columns: repeat(
			auto-fill,
			minmax(calc(200px + 4rem), 1fr)
		);
		justify-items: center;
		margin-bottom: 2rem;
	}
</style>
