---
import type { CollectionEntry } from 'astro:content';
import { Picture } from '@astrojs/image/components';
import cover from './forging_modernity_cover.jpg';

export interface Props {
	bookInfo: CollectionEntry<'pages'>;
	reviewItems: Array<CollectionEntry<'reviews'>>;
	footerItems: Array<CollectionEntry<'syndication'>>;
}

const { bookInfo, reviewItems, footerItems } = Astro.props;

const { Content: BookInfo } = await bookInfo.render();

const infoColumnWidth = 13;
const coverColumnWidth = 10;
const overviewSideMargin = 12;
const overviewGridGap = 10;

const coverSize = `calc(${
	(coverColumnWidth / (infoColumnWidth + coverColumnWidth)) * 100
}vw - ${overviewGridGap / 2 + overviewSideMargin})`;
---

<section>
	<div class="bookinfo-container">
		<div class="bookinfo-cover-container">
			<Picture
				src={cover}
				alt="Forging Modernity Cover"
				sizes={coverSize}
				widths={[400, 800, 1200]}
				format="jpg"
				quality={90}
				fit="cover"
				position="center"
				class="bookinfo-cover"
			/>
		</div>
		<article class="bookinfo-text">
			<BookInfo />
		</article>
	</div>
</section>
<section>
	<div class="reviews-container">
		<h1>Reviews & Endorsements</h1>
		{
			reviewItems.map(({ data: item, body: review }) => (
				<>
					<p class="review">{review}</p>
					<p class="reviewer">
						<strong>{item.name}</strong>
					</p>
				</>
			))
		}
	</div>
</section>
<section>
	<div class="footer-container">
		<ul class="para-text">
			{
				footerItems.map(({ data: item }) => (
					<li>
						<a href={item.link}>{item.title}</a>
					</li>
				))
			}
		</ul>
	</div>
</section>
<style
	lang="scss"
	define:vars={{
		infoColumnWidth: `${infoColumnWidth}fr`,
		coverColumnWidth: `${coverColumnWidth}fr`,
		overviewSideMargin: `${overviewSideMargin}rem`,
		overviewGridGap: `${overviewGridGap}rem`,
	}}
>
	section {
		width: 100%;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}

	.bookinfo-container {
		display: grid;
		grid-template-columns: var(--coverColumnWidth) var(--infoColumnWidth);
		grid-template-rows: 1fr;
		grid-gap: var(--overviewGridGap);
		margin: 5rem var(--overviewSideMargin);
	}

	.reviews-container {
		display: flex;
		flex-direction: column;
		margin: 5rem var(--overviewSideMargin);
	}

	.footer-container {
		margin: 5rem var(--overviewSideMargin);
		li {
			list-style: none;
		}
	}

	.bookinfo-text {
		:global(h1) {
			font-size: 3rem;
			margin-bottom: 0;
		}

		:global(h2) {
			font-size: 1.4rem;
			margin-top: 0;
			margin-bottom: 0;
			line-height: 1;
			letter-spacing: 0.04em;
		}

		:global(h3) {
			font-size: 1rem;
			letter-spacing: 0.06em;

			:global(a) {
				text-underline-offset: 0.2em;
			}
		}
		:global(p) {
			text-align: justify;
		}
	}

	.bookinfo-cover-container {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.bookinfo-cover {
		width: 100%;
	}

	.reviewer {
		@include m.parchment-emphasis;
	}

	.review {
		text-align: justify;
	}
</style>
