---
export type Props = {
	class?: string;
	children: unknown;
};

const { class: className } = Astro.props;

let mainClass = 'parchment';
if (className) {
	mainClass += ` ${className}`;
}
---

<main class={mainClass}>
	<slot />
</main>

<style lang="scss">
	@use '~styles/_variables.scss' as v;
	@use '~styles/_mixins.scss' as m;

	.parchment {
		box-shadow: 2px 3px 20px v.$color-black,
			0 0 125px v.$color-parchment-shadow inset;
		background: v.$color-parchment;
		background-image: v.$parchment-background;
		padding: 0 calc(v.$padding-width-overview-sides / 8);

		@include m.media('>phone') {
			padding: 0 calc(v.$padding-width-overview-sides / 4);
		}

		@include m.media('>desktop') {
			padding: 0 calc(v.$padding-width-overview-sides / 2);
		}

		@include m.media('>xxlarge') {
			padding: 0 v.$padding-width-overview-sides;
		}

		:global(p),
		:global(.para-text) {
			@include m.parchment-text;

			line-height: 1.5;

			:global(.lead-in) {
				@include m.parchment-emphasis;
			}
		}

		:global(h1),
		:global(h2) {
			@include m.parchment-deboss;
		}

		:global(h1),
		:global(h2),
		:global(h3),
		:global(h4),
		:global(h5),
		:global(figure) {
			opacity: v.$opacity-parchment;
		}

		:global(a) {
			color: unset;

			&:hover,
			&:focus,
			&:active,
			&:visited {
				color: unset;
			}

			&:hover {
				text-decoration-thickness: 2px;
			}
		}
	}
</style>
